<?php
/**
 * Generated by a Discuz! X2.5 converter of MyBB Merge System.
 * @Module: {$MOD_NAME}
 * @Total: {$TOTAL}
 */

// Discuz! X2.5 Redirect starts here.
define("IN_DZX_REDIRECT", true);
define("DZX_REDIRECT_ROOT", dirname(__FILE__).'/');

require_once DZX_REDIRECT_ROOT."DZX25_dzx_redirect_class.php";

class DZX_Redirect_User extends DZX_Redirect
{
	public function get_redirect($id, $dz_module_type = '')
	{
		return self::$redirect_base_url . "{$this->mybb_module}.php?action=profile&uid={$id}";
	}
	
	public $records = array(
			'uids' => array(
					123 => 456,
			),
			'usernames' => array(
					'我是谁' => 456,
			),
	);
	
}

if($_SERVER['REQUEST_METHOD'] != "GET")
{
	DZX_Redirect::redirect();
	die("Hacking attempt");
}

$dzx_module = 'home';
$mybb_module = 'member';

if(isset($_GET['username']))
{
	$dz_username = $_GET['username'];
}
if(isset($_GET['uid']))
{
	$dz_id = $_GET['uid'];
}

if(isset($dz_id))
{
	$dz_id = intval($dz_id);
	$mybb_redirector = new DZX_Redirect_User($mybb_module, $dzx_module);
	$id = $mybb_redirector->get_id($dz_id, 'uids');
	$redirect_url = 'aa';//$id === false ? '' : $mybb_redirector->get_redirect($id);
	if($id === false)
	{
		$message = "User not found with Discuz! uid #{$dz_id}.";
	}
	else
	{
		$message = "User found with Discuz! uid #{$dz_id}, MyBB uid #{$id}";
	}
	DZX_Redirect_User::redirect($redirect_url, $message);
}
else if(isset($dz_username))
{
	$mybb_redirector = new DZX_Redirect_User($mybb_module, $dzx_module);
	$dz_username = corrent_encoding($dz_username, DZX_Redirect_User::$encoding);
	$id = $mybb_redirector->get_id($dz_username, 'usernames');
	$redirect_url = 'aa';//$id === false ? '' : $mybb_redirector->get_redirect($id);
	if($id === false)
	{
		$message = "User not found with Discuz! username '{$dz_username}'.";
	}
	else
	{
		$message = "User found with Discuz! username '{$dz_username}', MyBB uid #{$id}";
	}
	DZX_Redirect_User::redirect($redirect_url, $message);
}
else
{
	DZX_Redirect::redirect('abc', 'adfas');
	die("Hacking attempt");
}

function corrent_encoding($str, $encoding = "GBK")
{
	if(!function_exists("mb_detect_encoding"))
	{
		return $str;
	}
	
	// mb_* don't support GBK, but its successor GB18030.
	$encoding = strtoupper($encoding);
	if($encoding == "GBK")
	{
		$encoding = "GB18030";
	}
	
	// mb_* supported encodings.
	$encodings = array(
			"UTF-8",
			"GB18030",
			"GB2312",
			"BIG5",
			"ASCII",
	);
	$encoding_detected = mb_detect_encoding($str, $encodings, true);
	
	if($encoding_detected != $encoding)
	{
		if(function_exists("iconv"))
		{
			// In iconv, GB2312 is mostly equivalent to CP936.
			if($encoding == "GB2312")
			{
				$encoding == "CP936";
			}
			if($encoding_detected == "GB2312")
			{
				$encoding_detected == "CP936";
			}
			$str = iconv($encoding_detected, $encoding, $str);
			return $str;
		}
	}
	
	return $str;
}